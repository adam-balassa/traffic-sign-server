document.querySelector('mutation-test-report-app').report = {"schemaVersion":1,"thresholds":{"high":60,"low":80},"files":{"hu/bme/aut/trafficsigns/api/request/DetectionQuery.kt":{"source":"package hu.bme.aut.trafficsigns.api.request\n\ndata class DetectionQuery (\n        val lat: Double?,\n        val lon: Double?,\n        val radius: Double?) {\n\n    init {\n        listOf(lat, lon, radius).run {\n            require(all { it == null } || all { it != null })\n        }\n    }\n\n    val isEmpty: Boolean\n    get() = lat == null\n}\n","language":"java","mutants":[{"id":3,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/request/DetectionQuery::getLat to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":25}},"status":"Killed"},{"id":4,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/request/DetectionQuery::getLon to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":25}},"status":"Killed"},{"id":5,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/request/DetectionQuery::getRadius to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":30}},"status":"Killed"},{"id":6,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":10,"column":13},"end":{"line":10,"column":61}},"status":"Killed"},{"id":7,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":10,"column":13},"end":{"line":10,"column":61}},"status":"Killed"},{"id":8,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":10,"column":13},"end":{"line":10,"column":61}},"status":"Killed"},{"id":9,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":10,"column":13},"end":{"line":10,"column":61}},"status":"Killed"},{"id":10,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":10,"column":13},"end":{"line":10,"column":61}},"status":"Killed"},{"id":11,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":15,"column":5},"end":{"line":15,"column":23}},"status":"Killed"},{"id":12,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":15,"column":5},"end":{"line":15,"column":23}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/mapping/DtoToModelMapper.kt":{"source":"package hu.bme.aut.trafficsigns.mapping\n\nimport hu.bme.aut.trafficsigns.api.response.DetectionResult\nimport hu.bme.aut.trafficsigns.api.response.model.Detection\nimport hu.bme.aut.trafficsigns.api.response.model.LocatedDetection\nimport hu.bme.aut.trafficsigns.model.DetectedSign\nimport org.mapstruct.Mapper\nimport org.mapstruct.Mapping\nimport org.mapstruct.factory.Mappers\n\n@Mapper\ninterface DtoToModelMapper {\n    @Mapping(source = \"sign.signClass\", target = \"classification.serial\")\n    fun modelToDetection(sign: DetectedSign): Detection\n    fun modelToDetection(sign: List<DetectedSign>): List<Detection>\n\n    @Mapping(source = \"sign.signClass\", target = \"classification.serial\")\n    fun modelToLocatedDetection(sign: DetectedSign): LocatedDetection\n    fun modelToLocatedDetection(sign: List<DetectedSign>): List<LocatedDetection>\n\n    @Mapping(source = \"detection.classification.serial\", target = \"signClass\")\n    fun detectionToModel(detection: Detection, lat: Double, lon: Double): DetectedSign\n\n    companion object {\n        val INSTANCE = Mappers.getMapper(DtoToModelMapper::class.java)\n\n        fun detectionToModel(result: DetectionResult, lat: Double, lon: Double): List<DetectedSign> {\n            return result.objects.map { detection: Detection -> INSTANCE.detectionToModel(detection, lat, lon) }\n        }\n    }\n}\n","language":"java","mutants":[{"id":36,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapper$Companion::getINSTANCE to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":25,"column":9},"end":{"line":25,"column":70}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/DetectionResult.kt":{"source":"package hu.bme.aut.trafficsigns.api.response\n\nimport hu.bme.aut.trafficsigns.api.response.model.Detection\n\ndata class DetectionResult (\n        val objects: List<Detection>,\n        val image: Base64Image,\n        val executionTime: Double\n){\n\n}\n","language":"java","mutants":[{"id":13,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/DetectionResult::getObjects to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":37}},"status":"Killed"},{"id":14,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/DetectionResult::getImage to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":7,"column":9},"end":{"line":7,"column":31}},"status":"Killed"},{"id":15,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/DetectionResult::getExecutionTime","location":{"start":{"line":8,"column":9},"end":{"line":8,"column":33}},"status":"Survived"}]},"hu/bme/aut/trafficsigns/api/response/model/LocatedDetection.kt":{"source":"package hu.bme.aut.trafficsigns.api.response.model\n\ndata class LocatedDetection (\n        var classification: Classification?,\n        var confidence: Double,\n        var lat: Double,\n        var lon: Double\n) {\n    constructor(): this(null, 0.0, 0.0, 0.0)\n}\n","language":"java","mutants":[{"id":26,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::getClassification to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":44}},"status":"Killed"},{"id":27,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::getConfidence","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":31}},"status":"Killed"},{"id":28,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::getLat","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":24}},"status":"Survived"},{"id":29,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::getLon","location":{"start":{"line":7,"column":9},"end":{"line":7,"column":23}},"status":"Survived"}]},"hu/bme/aut/trafficsigns/controller/StoredDetectionController.kt":{"source":"package hu.bme.aut.trafficsigns.controller\n\nimport hu.bme.aut.trafficsigns.api.request.DetectionQuery\nimport hu.bme.aut.trafficsigns.api.response.model.Detection\nimport hu.bme.aut.trafficsigns.api.response.model.LocatedDetection\nimport hu.bme.aut.trafficsigns.mapping.DtoToModelMapper\nimport hu.bme.aut.trafficsigns.service.DetectionService\nimport org.springframework.web.bind.annotation.GetMapping\nimport org.springframework.web.bind.annotation.RequestMapping\nimport org.springframework.web.bind.annotation.RequestParam\nimport org.springframework.web.bind.annotation.RestController\n\n@RestController\n@RequestMapping(\"/signs\")\nclass StoredDetectionController (private val service: DetectionService) {\n\n    @GetMapping\n    fun getSignsByPosition(\n            @RequestParam lat: Double?,\n            @RequestParam lon: Double?,\n            @RequestParam radius: Double?): List<LocatedDetection> {\n        val query = DetectionQuery(lat, lon, radius)\n\n        return DtoToModelMapper.INSTANCE.modelToLocatedDetection(\n                if (query.isEmpty) service.getAllSigns()\n                else service.getSignsByPosition(query)\n        )\n    }\n}\n","language":"java","mutants":[{"id":33,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/controller/StoredDetectionController::getSignsByPosition to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":24,"column":9},"end":{"line":24,"column":65}},"status":"Killed"},{"id":34,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":25,"column":17},"end":{"line":25,"column":56}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/model/Classification.kt":{"source":"package hu.bme.aut.trafficsigns.api.response.model\n\nimport hu.bme.aut.trafficsigns.util.labels\n\ndata class Classification (var serial: Int = -1) {\n\n    val label: String\n    get () = labels[serial]\n}\n","language":"java","mutants":[{"id":19,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":50}},"status":"Killed"},{"id":20,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/Classification::getLabel to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":8,"column":5},"end":{"line":8,"column":27}},"status":"Survived"}]},"hu/bme/aut/trafficsigns/api/request/Image.kt":{"source":"package hu.bme.aut.trafficsigns.api.request\n\nopen class Image (\n    val image: String\n)\n","language":"java","mutants":[{"id":0,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/request/Image::getImage to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":5},"end":{"line":4,"column":21}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/model/Detection.kt":{"source":"package hu.bme.aut.trafficsigns.api.response.model\n\ndata class Detection (\n    var boundingBox: BoundingBox?,\n    var classification: Classification?,\n    var confidence: Double\n) {\n    constructor(): this(null, null, 0.0)\n}\n","language":"java","mutants":[{"id":21,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/Detection::getBoundingBox to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":5},"end":{"line":4,"column":34}},"status":"Killed"},{"id":22,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/Detection::getClassification to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":5,"column":5},"end":{"line":5,"column":40}},"status":"Killed"},{"id":23,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/Detection::getConfidence","location":{"start":{"line":6,"column":5},"end":{"line":6,"column":26}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/model/BoundingBox.kt":{"source":"package hu.bme.aut.trafficsigns.api.response.model\n\ndata class BoundingBox (\n        val topLeft: Coordinates,\n        val bottomRight: Coordinates\n)\n","language":"java","mutants":[{"id":24,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/BoundingBox::getTopLeft to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":33}},"status":"Killed"},{"id":25,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/model/BoundingBox::getBottomRight to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":36}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/util/TimeUtil.kt":{"source":"package hu.bme.aut.trafficsigns.util\n\nimport java.util.*\n\nfun <T> withTimeMeasure(run: () -> T): TimeMeasurement<T> {\n    val start = Date().time\n    val result = run()\n    val end = Date().time\n    return TimeMeasurement(end - start, result)\n}\n\ndata class TimeMeasurement<T> (\n        val time: Long,\n        val result: T\n)\n","language":"java","mutants":[{"id":139,"mutatorName":"MathMutator","description":"Replaced long subtraction with addition","location":{"start":{"line":9,"column":5},"end":{"line":9,"column":47}},"status":"Survived"},{"id":140,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/util/TimeUtilKt::withTimeMeasure to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":9,"column":5},"end":{"line":9,"column":47}},"status":"Killed"},{"id":141,"mutatorName":"ReturnValsMutator","description":"replaced return of long value with value + 1 for hu/bme/aut/trafficsigns/util/TimeMeasurement::getTime","location":{"start":{"line":13,"column":9},"end":{"line":13,"column":23}},"status":"Survived"},{"id":142,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/util/TimeMeasurement::getResult to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":14,"column":9},"end":{"line":14,"column":21}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/Base64Image.kt":{"source":"package hu.bme.aut.trafficsigns.api.response\n\ndata class Base64Image (val base64: String)\n","language":"java","mutants":[{"id":16,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/api/response/Base64Image::getBase64 to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":43}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/model/DetectedSign.kt":{"source":"package hu.bme.aut.trafficsigns.model\n\nimport javax.persistence.*\n\n@Entity\n@Table(name=\"detections\")\nclass DetectedSign {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    var id: Long? = null\n\n\n    @Column(precision = 8, scale = 6)\n    var lat: Double = 0.0\n\n    @Column(precision = 8, scale = 6)\n    var lon: Double = 0.0\n\n    var signClass: Int = -1\n\n    var confidence: Double = 0.0\n}\n","language":"java","mutants":[{"id":76,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/model/DetectedSign::getId to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":10,"column":5},"end":{"line":10,"column":24}},"status":"NoCoverage"},{"id":77,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/model/DetectedSign::getLat","location":{"start":{"line":14,"column":5},"end":{"line":14,"column":25}},"status":"Killed"},{"id":78,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/model/DetectedSign::getLon","location":{"start":{"line":17,"column":5},"end":{"line":17,"column":25}},"status":"Killed"},{"id":79,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":19,"column":5},"end":{"line":19,"column":27}},"status":"Killed"},{"id":80,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/model/DetectedSign::getConfidence","location":{"start":{"line":21,"column":5},"end":{"line":21,"column":32}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/service/DetectionService.kt":{"source":"package hu.bme.aut.trafficsigns.service\n\nimport hu.bme.aut.trafficsigns.api.request.DetectionQuery\nimport hu.bme.aut.trafficsigns.api.response.DetectionResult\nimport hu.bme.aut.trafficsigns.api.response.Base64Image\nimport hu.bme.aut.trafficsigns.api.response.model.BoundingBox\nimport hu.bme.aut.trafficsigns.api.response.model.Classification\nimport hu.bme.aut.trafficsigns.api.response.model.Coordinates\nimport hu.bme.aut.trafficsigns.api.response.model.Detection\nimport hu.bme.aut.trafficsigns.dto.detector.DetectionResponse\nimport hu.bme.aut.trafficsigns.model.DetectedSign\nimport hu.bme.aut.trafficsigns.repository.DetectionRepository\nimport hu.bme.aut.trafficsigns.util.base64ToImage\nimport hu.bme.aut.trafficsigns.util.deleteImage\nimport hu.bme.aut.trafficsigns.util.imageToBase64\nimport hu.bme.aut.trafficsigns.util.withTimeMeasure\nimport hu.bme.aut.trafficsigns.mapping.DtoToModelMapper\nimport org.springframework.stereotype.Service\nimport java.util.*\n\n@Service\nclass DetectionService (\n        private val http: HttpService,\n        private val repository: DetectionRepository\n) {\n\n    private final val random = Random()\n\n    fun getAllSigns(): List<DetectedSign> = repository.findAll()\n    fun getSignsByPosition(query: DetectionQuery) = findCloseDetections(query.lat!!, query.lon!!, query.radius!!)\n\n    fun runDetection(base64Image: String): DetectionResult {\n        val path = base64ToImage(base64Image)\n        val response = withTimeMeasure {  http.detect(path) }\n        deleteImage(path)\n        return DetectionResult(\n                response.result.toDetections(),\n                Base64Image(\"data:image/png;base64,${base64Image}\"),\n                response.time.toDouble()\n        )\n    }\n\n    fun runAndSaveDetection(image: String, lat: Double, lon: Double): DetectionResult {\n        val result = runDetection(image)\n        if (result.objects.isEmpty())\n            return result\n\n        val previousDetections = findCloseDetections(lat, lon)\n\n        refreshSavedDetections(result, previousDetections, lat, lon)\n\n        val legitDetections = previousDetections.filter { it.confidence > 0.4 }\n        val detectionsToAdd = legitDetections.filter { sign ->\n            result.objects.all { sign.signClass != it.classification?.serial }\n        }\n\n        return DetectionResult(\n                mutableListOf<Detection>().apply {\n                    addAll(result.objects)\n                    addAll(DtoToModelMapper.INSTANCE.modelToDetection(detectionsToAdd))\n                },\n                result.image,\n                result.executionTime\n        )\n    }\n\n    private fun refreshSavedDetections(result: DetectionResult, previousDetections: List<DetectedSign>, lat: Double, lon: Double) {\n        val detectionsToSave = mutableListOf<DetectedSign>()\n        val detectionsToDelete = mutableListOf<DetectedSign>()\n\n        for (detection in result.objects) {\n            val previous = previousDetections.find { it.signClass == detection.classification?.serial }\n            if (previous != null) {\n                val common = (previous.confidence + detection.confidence) / 2\n                previous.confidence = common + (1 - common) / 2\n                previous.lat = lat; previous.lon = lon\n\n                detection.confidence = previous.confidence\n                detectionsToSave.add(previous)\n            } else {\n                detectionsToSave.add(DtoToModelMapper.INSTANCE.detectionToModel(detection, lat, lon))\n            }\n        }\n\n        for (previous in previousDetections)\n            if (result.objects.all { it.classification?.serial != previous.signClass }) {\n                previous.confidence -= 0.1\n                if (previous.confidence < 0.4)\n                    detectionsToDelete.add(previous)\n                else\n                    detectionsToSave.add(previous)\n            }\n\n        repository.saveAll(detectionsToSave)\n        repository.deleteAll(detectionsToDelete)\n    }\n\n    fun runRandomImageDetection(): DetectionResult {\n        val images = listOf(\"testimage.png\", \"IMG_3763.jpg\", \"IMG_3869.jpg\")\n        val i = random.nextInt(images.size)\n        val imageName = images[i]\n        val image = imageToBase64(imageName)\n        return runDetection(image)\n    }\n\n    private fun findCloseDetections(lat: Double, lon: Double, radius: Double = 0.00007): List<DetectedSign> {\n        return repository.findByLatBetweenAndLonBetween(\n                lat - radius, lat + radius,\n                lon - radius, lon + radius)\n    }\n\n    private fun DetectionResponse.toDetections(): List<Detection> {\n        val detectedObjects = mutableListOf<Detection>()\n        for (i in objects.indices) {\n            val x = objects[i][1]\n            val y = objects[i][2]\n            val w = objects[i][3]\n            val h = objects[i][4]\n            val x1 = x - w / 2\n            val x2 = x + w / 2\n            val y1 = y - h / 2\n            val y2 = y + h / 2\n            detectedObjects.add(Detection(\n                    boundingBox = BoundingBox(Coordinates(x1, y1), Coordinates(x2, y2)),\n                    classification = Classification(classifications[i]),\n                    confidence = objects[i][0]\n            ))\n        }\n        return detectedObjects\n    }\n}\n","language":"java","mutants":[{"id":82,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService$runDetection$response$1::invoke to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":34,"column":9},"end":{"line":34,"column":61}},"status":"Killed"},{"id":83,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/util/ImageUtilKt::deleteImage","location":{"start":{"line":35,"column":9},"end":{"line":35,"column":25}},"status":"Survived"},{"id":84,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::runDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":36,"column":9},"end":{"line":36,"column":31}},"status":"Killed"},{"id":85,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":45,"column":9},"end":{"line":45,"column":37}},"status":"Killed"},{"id":86,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::runAndSaveDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":46,"column":13},"end":{"line":46,"column":25}},"status":"Killed"},{"id":87,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/service/DetectionService::refreshSavedDetections","location":{"start":{"line":50,"column":9},"end":{"line":50,"column":68}},"status":"Killed"},{"id":88,"mutatorName":"ConditionalsBoundaryMutator","description":"changed conditional boundary","location":{"start":{"line":52,"column":9},"end":{"line":52,"column":79}},"status":"Survived"},{"id":89,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":52,"column":9},"end":{"line":52,"column":79}},"status":"Killed"},{"id":90,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":52,"column":9},"end":{"line":52,"column":79}},"status":"Killed"},{"id":91,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":54,"column":13},"end":{"line":54,"column":78}},"status":"Killed"},{"id":92,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":54,"column":13},"end":{"line":54,"column":78}},"status":"Killed"},{"id":93,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":54,"column":13},"end":{"line":54,"column":78}},"status":"Killed"},{"id":94,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":54,"column":13},"end":{"line":54,"column":78}},"status":"Killed"},{"id":95,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::runAndSaveDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":57,"column":9},"end":{"line":57,"column":31}},"status":"Killed"},{"id":96,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":71,"column":9},"end":{"line":71,"column":43}},"status":"Killed"},{"id":97,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":72,"column":13},"end":{"line":72,"column":103}},"status":"Killed"},{"id":98,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":72,"column":13},"end":{"line":72,"column":103}},"status":"Killed"},{"id":99,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":72,"column":13},"end":{"line":72,"column":103}},"status":"Killed"},{"id":100,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":72,"column":13},"end":{"line":72,"column":103}},"status":"Killed"},{"id":101,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":73,"column":13},"end":{"line":73,"column":35}},"status":"Killed"},{"id":102,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":74,"column":17},"end":{"line":74,"column":77}},"status":"Killed"},{"id":103,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":74,"column":17},"end":{"line":74,"column":77}},"status":"Killed"},{"id":104,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":75,"column":17},"end":{"line":75,"column":63}},"status":"Killed"},{"id":105,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":75,"column":17},"end":{"line":75,"column":63}},"status":"Killed"},{"id":106,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":75,"column":17},"end":{"line":75,"column":63}},"status":"Killed"},{"id":107,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setConfidence","location":{"start":{"line":75,"column":17},"end":{"line":75,"column":63}},"status":"Killed"},{"id":108,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setLat","location":{"start":{"line":76,"column":17},"end":{"line":76,"column":54}},"status":"Killed"},{"id":109,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setLon","location":{"start":{"line":76,"column":17},"end":{"line":76,"column":54}},"status":"Killed"},{"id":110,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/Detection::setConfidence","location":{"start":{"line":78,"column":17},"end":{"line":78,"column":58}},"status":"Killed"},{"id":111,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":85,"column":9},"end":{"line":85,"column":44}},"status":"Killed"},{"id":112,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":86,"column":13},"end":{"line":86,"column":89}},"status":"Killed"},{"id":113,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":86,"column":13},"end":{"line":86,"column":89}},"status":"Killed"},{"id":114,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":86,"column":13},"end":{"line":86,"column":89}},"status":"Killed"},{"id":115,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":87,"column":17},"end":{"line":87,"column":42}},"status":"Killed"},{"id":116,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setConfidence","location":{"start":{"line":87,"column":17},"end":{"line":87,"column":42}},"status":"Killed"},{"id":117,"mutatorName":"ConditionalsBoundaryMutator","description":"changed conditional boundary","location":{"start":{"line":88,"column":17},"end":{"line":88,"column":46}},"status":"Survived"},{"id":118,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":88,"column":17},"end":{"line":88,"column":46}},"status":"Killed"},{"id":119,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/repository/DetectionRepository::deleteAll","location":{"start":{"line":95,"column":9},"end":{"line":95,"column":48}},"status":"Killed"},{"id":120,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::runRandomImageDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":103,"column":9},"end":{"line":103,"column":34}},"status":"Killed"},{"id":121,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::findCloseDetections to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":107,"column":9},"end":{"line":107,"column":56}},"status":"Killed"},{"id":122,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":108,"column":17},"end":{"line":108,"column":43}},"status":"Killed"},{"id":123,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":108,"column":17},"end":{"line":108,"column":43}},"status":"Killed"},{"id":124,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":109,"column":17},"end":{"line":109,"column":43}},"status":"Survived"},{"id":125,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":109,"column":17},"end":{"line":109,"column":43}},"status":"Killed"},{"id":126,"mutatorName":"ConditionalsBoundaryMutator","description":"changed conditional boundary","location":{"start":{"line":114,"column":9},"end":{"line":114,"column":36}},"status":"Killed"},{"id":127,"mutatorName":"IncrementsMutator","description":"Changed increment from 1 to -1","location":{"start":{"line":114,"column":9},"end":{"line":114,"column":36}},"status":"Killed"},{"id":128,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":114,"column":9},"end":{"line":114,"column":36}},"status":"Killed"},{"id":129,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":119,"column":13},"end":{"line":119,"column":30}},"status":"Killed"},{"id":130,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":119,"column":13},"end":{"line":119,"column":30}},"status":"Killed"},{"id":131,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":120,"column":13},"end":{"line":120,"column":30}},"status":"Killed"},{"id":132,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":120,"column":13},"end":{"line":120,"column":30}},"status":"Killed"},{"id":133,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":121,"column":13},"end":{"line":121,"column":30}},"status":"Killed"},{"id":134,"mutatorName":"MathMutator","description":"Replaced double subtraction with addition","location":{"start":{"line":121,"column":13},"end":{"line":121,"column":30}},"status":"Killed"},{"id":135,"mutatorName":"MathMutator","description":"Replaced double division with multiplication","location":{"start":{"line":122,"column":13},"end":{"line":122,"column":30}},"status":"Killed"},{"id":136,"mutatorName":"MathMutator","description":"Replaced double addition with subtraction","location":{"start":{"line":122,"column":13},"end":{"line":122,"column":30}},"status":"Killed"},{"id":137,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/DetectionService::toDetections to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":129,"column":9},"end":{"line":129,"column":30}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/controller/ImageController.kt":{"source":"package hu.bme.aut.trafficsigns.controller\n\nimport hu.bme.aut.trafficsigns.api.request.Image\nimport hu.bme.aut.trafficsigns.api.request.ImageWithCoordinates\nimport hu.bme.aut.trafficsigns.api.response.DetectionResult\nimport hu.bme.aut.trafficsigns.api.response.model.BoundingBox\nimport hu.bme.aut.trafficsigns.api.response.model.Classification\nimport hu.bme.aut.trafficsigns.api.response.model.Coordinates\nimport hu.bme.aut.trafficsigns.api.response.model.Detection\nimport hu.bme.aut.trafficsigns.service.DetectionService\nimport hu.bme.aut.trafficsigns.util.imageToBase64\nimport org.springframework.web.bind.annotation.*\n\n@RestController\n@RequestMapping(\"/image\")\n@CrossOrigin(origins=[\"*\"])\nclass ImageController (\n        private val service: DetectionService\n){\n    @PostMapping(\"/static\")\n    fun classifyImage(@RequestBody image: Image): DetectionResult {\n        return service.runDetection(image.image.removePrefix(\"data:image/png;base64,\"))\n    }\n\n    @PostMapping\n    fun classifyImageRealTime(@RequestBody image: ImageWithCoordinates): DetectionResult {\n        return service.runAndSaveDetection(\n                image.image.removePrefix(\"data:image/png;base64,\"),\n                image.lat,\n                image.lon\n        )\n    }\n\n    @PostMapping(\"/random\")\n    fun classifyRandomImage(): DetectionResult {\n        return service.runRandomImageDetection()\n    }\n}\n","language":"java","mutants":[{"id":30,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/controller/ImageController::classifyImage to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":22,"column":9},"end":{"line":22,"column":87}},"status":"Killed"},{"id":31,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/controller/ImageController::classifyImageRealTime to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":27,"column":9},"end":{"line":27,"column":43}},"status":"Killed"},{"id":32,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/controller/ImageController::classifyRandomImage to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":36,"column":9},"end":{"line":36,"column":48}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/dto/detector/DetectionRequest.kt":{"source":"package hu.bme.aut.trafficsigns.dto.detector\n\ndata class DetectionRequest(\n        val path: String\n)\n","language":"java","mutants":[{"id":35,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/dto/detector/DetectionRequest::getPath to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":24}},"status":"Survived"}]},"hu/bme/aut/trafficsigns/api/request/ImageWithCoordinates.kt":{"source":"package hu.bme.aut.trafficsigns.api.request\n\nclass ImageWithCoordinates (\n        image: String,\n        val lat: Double,\n        val lon: Double): Image(image)\n","language":"java","mutants":[{"id":1,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/request/ImageWithCoordinates::getLat","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":24}},"status":"Killed"},{"id":2,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/request/ImageWithCoordinates::getLon","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":38}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/api/response/model/Coordinates.kt":{"source":"package hu.bme.aut.trafficsigns.api.response.model\n\ndata class Coordinates (\n        val x: Double,\n        val y: Double\n)\n","language":"java","mutants":[{"id":17,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/Coordinates::getX","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":22}},"status":"Killed"},{"id":18,"mutatorName":"ReturnValsMutator","description":"replaced return of double value with -(x + 1) for hu/bme/aut/trafficsigns/api/response/model/Coordinates::getY","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":21}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/service/HttpService.kt":{"source":"package hu.bme.aut.trafficsigns.service\n\nimport hu.bme.aut.trafficsigns.dto.detector.DetectionRequest\nimport hu.bme.aut.trafficsigns.dto.detector.DetectionResponse\nimport hu.bme.aut.trafficsigns.exception.InvalidDetectorResponse\nimport org.springframework.beans.factory.annotation.Value\nimport org.springframework.http.HttpEntity\nimport org.springframework.stereotype.Service\nimport org.springframework.web.client.RestTemplate\n\nconst val DETECT_ENDPOINT = \"/detect\"\n\n@Service\nclass HttpService {\n    @Value(value=\"\\${detector.host}\")\n    private lateinit var host: String\n\n    fun detect(path: String): DetectionResponse {\n        val restTemplate = RestTemplate()\n        val request = HttpEntity(DetectionRequest(path))\n        return try {\n            val response = restTemplate.postForEntity(host + DETECT_ENDPOINT , request, DetectionResponse::class.java)\n            response.body!!\n        } catch (e: Throwable) {\n            throw InvalidDetectorResponse(2001, \"Invalid result from detector server\")\n        }\n    }\n}\n","language":"java","mutants":[{"id":81,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/service/HttpService::detect to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":21,"column":9},"end":{"line":21,"column":20}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl.java":{"source":"   ","language":"java","mutants":[{"id":37,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":38,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectedSignToClassification to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":39,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectedSignToClassification to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":40,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/Classification::setSerial","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":41,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":42,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectedSignToClassification1 to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":43,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectedSignToClassification1 to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":44,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/Classification::setSerial","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":45,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":46,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":47,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":48,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":49,"mutatorName":"ReturnValsMutator","description":"replaced return of integer sized value with (x == 0 ? 1 : 0)","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":50,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":51,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":52,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectionToModel to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":53,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::detectionToModel to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":54,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setSignClass","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":55,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setConfidence","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":56,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setLat","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":57,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/model/DetectedSign::setLon","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":58,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":59,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":60,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":61,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/Detection::setClassification","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":62,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/Detection::setConfidence","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":63,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":64,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":65,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":66,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":67,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToLocatedDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":68,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToLocatedDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":69,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::setClassification","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":70,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::setConfidence","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":71,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::setLat","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":72,"mutatorName":"VoidMethodCallMutator","description":"removed call to hu/bme/aut/trafficsigns/api/response/model/LocatedDetection::setLon","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":73,"mutatorName":"NegateConditionalsMutator","description":"negated conditional","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"},{"id":74,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToLocatedDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"NoCoverage"},{"id":75,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/mapping/DtoToModelMapperImpl::modelToLocatedDetection to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":2}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/util/Labels.kt":{"source":"package hu.bme.aut.trafficsigns.util\n\nimport lombok.experimental.UtilityClass\n\nval labels = listOf(\n        \"Speed limit (20km/h)\",\n        \"Speed limit (30km/h)\",\n        \"Speed limit (50km/h)\",\n        \"Speed limit (60km/h)\",\n        \"Speed limit (70km/h)\",\n        \"Speed limit (80km/h)\",\n        \"End of speed limit (80km/h)\",\n        \"Speed limit (100km/h)\",\n        \"Speed limit (120km/h)\",\n        \"No passing\",\n        \"No passing for vehicles over 3.5 metric tons\",\n        \"Right-of-way at the next intersection\",\n        \"Priority road\",\n        \"Yield\",\n        \"Stop\",\n        \"No vehicles\",\n        \"Vehicles over 3.5 metric tons prohibited\",\n        \"No entry\",\n        \"General caution\",\n        \"Dangerous curve to the left\",\n        \"Dangerous curve to the right\",\n        \"Double curve\",\n        \"Bumpy road\",\n        \"Slippery road\",\n        \"Road narrows on the right\",\n        \"Road work\",\n        \"Traffic signals\",\n        \"Pedestrians\",\n        \"Children crossing\",\n        \"Bicycles crossing\",\n        \"Beware of ice/snow\",\n        \"Wild animals crossing\",\n        \"End of all speed and passing limits\",\n        \"Turn right ahead\",\n        \"Turn left ahead\",\n        \"Ahead only\",\n        \"Go straight or right\",\n        \"Go straight or left\",\n        \"Keep right\",\n        \"Keep left\",\n        \"Roundabout mandatory\",\n        \"End of no passing\",\n        \"End of no passing by vehicles over 3.5 metric tons\"\n)\n","language":"java","mutants":[{"id":143,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/util/LabelsKt::getLabels to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":20}},"status":"Killed"}]},"hu/bme/aut/trafficsigns/util/ImageUtil.kt":{"source":"package hu.bme.aut.trafficsigns.util\n\nimport net.coobird.thumbnailator.Thumbnails\nimport net.coobird.thumbnailator.geometry.Positions\nimport java.io.ByteArrayOutputStream\nimport java.io.File\nimport java.nio.file.Files\nimport java.nio.file.Path\nimport java.time.OffsetDateTime\nimport java.util.*\nimport javax.imageio.ImageIO\n\n\nfun imageToBase64(filePath: String): String {\n    val folder = \"src/main/resources/images\"\n    val image = Thumbnails.of(File(Path.of(folder, filePath).toUri()))\n            .crop(Positions.CENTER)\n            .size(256, 256)\n            .asBufferedImage()\n    val out = ByteArrayOutputStream()\n\n    ImageIO.write(image, \"PNG\", out)\n    val bytes: ByteArray = out.toByteArray()\n\n    return Base64.getEncoder().encodeToString(bytes)\n}\n\nfun base64ToImage(base64: String): String {\n    val decodedBytes: ByteArray = Base64.getDecoder().decode(base64)\n    val path = Path.of(\"tmp\", \"${OffsetDateTime.now().toEpochSecond()}.png\")\n    Files.createDirectories(path.parent)\n    Files.write(path, decodedBytes)\n    return path.toAbsolutePath().toString()\n}\n\nfun deleteImage(path: String) {\n    Files.deleteIfExists(Path.of(path))\n}\n","language":"java","mutants":[{"id":138,"mutatorName":"ReturnValsMutator","description":"mutated return of Object value for hu/bme/aut/trafficsigns/util/ImageUtilKt::base64ToImage to ( if (x != null) null else throw new RuntimeException )","location":{"start":{"line":33,"column":5},"end":{"line":33,"column":43}},"status":"Killed"}]}}}